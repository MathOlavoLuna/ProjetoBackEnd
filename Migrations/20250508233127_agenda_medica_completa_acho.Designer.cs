// <auto-generated />
using System;
using API_VidaPlus.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_VidaPlus.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250508233127_agenda_medica_completa_acho")]
    partial class agenda_medica_completa_acho
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("API_VidaPlus.Models.AgendaMedica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId")
                        .IsUnique();

                    b.ToTable("AgendaMedica");
                });

            modelBuilder.Entity("API_VidaPlus.Models.Consultas", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<bool?>("Compareceu")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("MarcadoPara")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int?>("ProntuarioId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProntuarioId");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("API_VidaPlus.Models.Exames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Compareceu")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("MarcadoPara")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int?>("ProntuarioId")
                        .HasColumnType("int");

                    b.Property<int>("TipoExameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProntuarioId");

                    b.HasIndex("TipoExameId");

                    b.ToTable("Exames");
                });

            modelBuilder.Entity("API_VidaPlus.Models.Prescricoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConsultaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HospitalId")
                        .HasColumnType("int");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConsultaId")
                        .IsUnique();

                    b.ToTable("Prescricoes");
                });

            modelBuilder.Entity("API_VidaPlus.Models.Prontuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descritivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId")
                        .IsUnique();

                    b.ToTable("Prontuarios");
                });

            modelBuilder.Entity("API_VidaPlus.Models.TiposExames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descritivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TiposExames");
                });

            modelBuilder.Entity("API_VidaPlus.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ProntuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("API_VidaPlus.Models.AgendaMedica", b =>
                {
                    b.HasOne("API_VidaPlus.Models.Usuarios", "Medico")
                        .WithOne("AgendaMedica")
                        .HasForeignKey("API_VidaPlus.Models.AgendaMedica", "MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("API_VidaPlus.Models.Consultas", b =>
                {
                    b.HasOne("API_VidaPlus.Models.Usuarios", "Medico")
                        .WithMany("ConsultasMedico")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_VidaPlus.Models.Usuarios", "Paciente")
                        .WithMany("ConsultasPaciente")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_VidaPlus.Models.Prontuarios", "ParticipaProntuario")
                        .WithMany("ConsultasPaciente")
                        .HasForeignKey("ProntuarioId");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");

                    b.Navigation("ParticipaProntuario");
                });

            modelBuilder.Entity("API_VidaPlus.Models.Exames", b =>
                {
                    b.HasOne("API_VidaPlus.Models.Usuarios", "Medico")
                        .WithMany("ExamesMedico")
                        .HasForeignKey("MedicoId");

                    b.HasOne("API_VidaPlus.Models.Usuarios", "Paciente")
                        .WithMany("ExamesPaciente")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_VidaPlus.Models.Prontuarios", "ParticipaProntuario")
                        .WithMany("ExamesPaciente")
                        .HasForeignKey("ProntuarioId");

                    b.HasOne("API_VidaPlus.Models.TiposExames", "Tipo")
                        .WithMany("PertenceExames")
                        .HasForeignKey("TipoExameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");

                    b.Navigation("ParticipaProntuario");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("API_VidaPlus.Models.Prescricoes", b =>
                {
                    b.HasOne("API_VidaPlus.Models.Consultas", "PertenceConsulta")
                        .WithOne("Prescricao")
                        .HasForeignKey("API_VidaPlus.Models.Prescricoes", "ConsultaId");

                    b.Navigation("PertenceConsulta");
                });

            modelBuilder.Entity("API_VidaPlus.Models.Prontuarios", b =>
                {
                    b.HasOne("API_VidaPlus.Models.Usuarios", "Paciente")
                        .WithOne("ParticipaProntuario")
                        .HasForeignKey("API_VidaPlus.Models.Prontuarios", "PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("API_VidaPlus.Models.Consultas", b =>
                {
                    b.Navigation("Prescricao");
                });

            modelBuilder.Entity("API_VidaPlus.Models.Prontuarios", b =>
                {
                    b.Navigation("ConsultasPaciente");

                    b.Navigation("ExamesPaciente");
                });

            modelBuilder.Entity("API_VidaPlus.Models.TiposExames", b =>
                {
                    b.Navigation("PertenceExames");
                });

            modelBuilder.Entity("API_VidaPlus.Models.Usuarios", b =>
                {
                    b.Navigation("AgendaMedica");

                    b.Navigation("ConsultasMedico");

                    b.Navigation("ConsultasPaciente");

                    b.Navigation("ExamesMedico");

                    b.Navigation("ExamesPaciente");

                    b.Navigation("ParticipaProntuario");
                });
#pragma warning restore 612, 618
        }
    }
}
